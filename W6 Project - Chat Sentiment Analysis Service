# W6 Project - Chat Sentiment Analysis Service

**Description:** You want to analyze the `public` chat messages \(like slack public channels\) of your team and create sentiment metrics of the different people on your team. The goal of this project is to analyze the conversations of your team to ensure they are happy ðŸ˜ƒ.

You will practice in this project:

* API usando `flask`
* NLTK sentiment analysis
* Docker, Heroku and Cloud databases
* Recommender systems

### Project Goals

**Main goal**: Analyze the conversations coming from a chat like `slack`


* \(L2ðŸ¥³\) Extract sentiment from chat messages and perform a report over a whole conversation
* \(L3ðŸ¤­\) Recommend friends to a user based on the contents from chat `documents` using a recommender system with `NLP` analysis.
* \(L4ðŸ˜Ž\) Deploy the service with docker to heroku and store messages in a cloud database.
* \(L5ðŸ”¥\) Do it real, use slack API to get messages and analyze the messages of our `datamad1019` channel.
  * `https://api.slack.com/`

### TODO's - API Endpoints

You have to create an api with all this endpoints:

- (GET) `/user/<user_id>/recommend`
  - **Purpose:** Recommend friend to this user based on chat contents
  - **Returns:** json array with top 3 similar users


## Links - API dev in python

- [<https://bottlepy.org/docs/dev/]>
- [<https://www.getpostman.com/]>

## Links - NLP & Text Sentiment Analysis

- [<https://www.nltk.org/]>
- [<https://towardsdatascience.com/basic-binary-sentiment-analysis-using-nltk-c94ba17ae386]>
- [<https://www.digitalocean.com/community/tutorials/how-to-perform-sentiment-analysis-in-python-3-using-the-natural-language-toolkit-nltk]>

## Links - Heroku & Docker & Cloud Databases

- [<https://docs.docker.com/engine/reference/builder/]>
- [<https://runnable.com/docker/python/dockerize-your-python-application]>
- [<https://devcenter.heroku.com/articles/container-registry-and-runtime]>
- [<https://devcenter.heroku.com/categories/deploying-with-docker]>
- Mongodb Atlas [<https://www.mongodb.com/cloud/atlas]>
- MySQL ClearDB [<https://devcenter.heroku.com/articles/cleardb]>
